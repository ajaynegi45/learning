# Multiple Routes

apiVersion: networking.k8s.io/v1 # API version of Kubernetes Networking used.
kind: Ingress  # Defines the resource type, which is an Ingress.
metadata:
  name: app-about-ingress  # A descriptive name for the Ingress resource.
  annotations:

    # Instructs NGINX to rewrite the URL to the root for this rule.
    nginx.ingress.kubernetes.io/rewrite-target: /

    # Enforces SSL redirection for security purposes (recommended).
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - app.example.com

      # metaName of your tls secret file
      secretName: myapp-secret-tls
  rules:
    - host: app.example.com  # Specifies the hostname for this rule.
      http:
        paths:

            # Specifies the path for which this rule is applicable.
          - path: /about

            # Indicates the match type for this path, matching any sub-paths under /about.
            pathType: Prefix
            backend:
              service:

                # The Kubernetes service that serves this path.
                name: about-service
                port:
                  number: 80  # The port on which the service listens.

          - path: /contact
            pathType: Prefix
            backend:
              service:
                name: contact-service
                port:
                  number: 80



---

# Multiple sub-domains or domains


apiVersion: networking.k8s.io/v1  # Specifies the API version of Kubernetes Networking used.
kind: Ingress  # Defines the resource type as an Ingress.
metadata:
  name: shop-app-ingress  # Descriptive name for the Ingress resource for shop and analytics subdomains.
  annotations:

    # Rewrites the URL to the root before routing to the service.
    nginx.ingress.kubernetes.io/rewrite-target: /

    # Forces redirection to HTTPS for both subdomains.
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # Sets the max request body size to 10MB (important for file uploads in the shop).
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"

spec:
  tls:
    - hosts:
        - shop.app.example.com  # Ensures TLS is applied for shop subdomain.
        - analytics.app.example.com  # Ensures TLS is applied for analytics subdomain.
      secretName: myapp-secret-tls  # Name of the Kubernetes secret that stores the TLS certificate.

  rules:
    - host: shop.app.example.com  # Specifies the host for the shop subdomain.
      http:
        paths:
          - path: /  # Root path for the shop domain.
            pathType: Prefix  # Uses Prefix to handle all sub-paths like /products or /checkout.
            backend:
              service:
                name: shop-service  # The Kubernetes service handling requests for the shop.
                port:
                  number: 80  # The port exposed by shop-service.

    - host: analytics.app.example.com  # Specifies the host for the analytics subdomain.
      http:
        paths:
          - path: /  # Root path for the analytics subdomain.
            pathType: Prefix  # Matches all paths under / for analytics.
            backend:
              service:
                name: analytics-service  # The Kubernetes service handling requests for analytics.
                port:
                  number: 80  # The port exposed by analytics-service.
